# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BrandType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  name: String
  status: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BrandTypeEdge {
  cursor: String
  node: BrandType
}

type BrandTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type BrandCursorPagination {
  edges: [BrandTypeEdge!]
  nodes: [BrandType!]
  totalCount: Int
  pageInfo: BrandTypePageInfo
}

type CategoryType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  name: String
  status: Boolean
}

type CategoryTypeEdge {
  cursor: String
  node: CategoryType
}

type CategoryTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type CategoryCursorPagination {
  edges: [CategoryTypeEdge!]
  nodes: [CategoryType!]
  totalCount: Int
  pageInfo: CategoryTypePageInfo
}

type SubCategoryType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  category_id: String
  name: String
  status: Boolean
  category: CategoryType!
}

type SubCategoryTypeEdge {
  cursor: String
  node: SubCategoryType
}

type SubCategoryTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type SubCategoryCursorPagination {
  edges: [SubCategoryTypeEdge!]
  nodes: [SubCategoryType!]
  totalCount: Int
  pageInfo: SubCategoryTypePageInfo
}

type VariantOptionType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  variant_id: String
  name: String
  status: Boolean
}

type VariantOptionTypeEdge {
  cursor: String
  node: VariantOptionType
}

type VariantOptionTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type VariantOptionCursorPagination {
  edges: [VariantOptionTypeEdge!]
  nodes: [VariantOptionType!]
  totalCount: Int
  pageInfo: VariantOptionTypePageInfo
}

type VariantType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  product_id: String
  name: String
  status: Boolean
  variant_option: [VariantOptionType!]!
}

type VariantTypeEdge {
  cursor: String
  node: VariantType
}

type VariantTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type VariantCursorPagination {
  edges: [VariantTypeEdge!]
  nodes: [VariantType!]
  totalCount: Int
  pageInfo: VariantTypePageInfo
}

type ProductOptionType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  sku_id: String
  variant_option_id: String
  variant_option: VariantOptionType
  status: Boolean
}

type ProductOptionTypeEdge {
  cursor: String
  node: ProductOptionType
}

type ProductOptionTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type ProductOptionCursorPagination {
  edges: [ProductOptionTypeEdge!]
  nodes: [ProductOptionType!]
  totalCount: Int
  pageInfo: ProductOptionTypePageInfo
}

type SkuType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  product_id: String
  sku: String
  name: String
  ranking: Float
  weight: Float
  discount: Float
  price: Float
  status: Boolean
  product: ProductType!
  product_option: [ProductOptionType!]!
}

type SkuTypeEdge {
  cursor: String
  node: SkuType
}

type SkuTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type SkuCursorPagination {
  edges: [SkuTypeEdge!]
  nodes: [SkuType!]
  totalCount: Int
  pageInfo: SkuTypePageInfo
}

type ProductType {
  createdAt: DateTime
  updatedAt: DateTime
  success: Boolean
  message: String
  _id: ID
  sub_category_id: String
  brand_id: String
  name: String
  slug: String
  description: String
  thumbnail: String
  status: Boolean
  sub_category: SubCategoryType!
  brand: BrandType!
  variant: [VariantType!]!
  sku: [SkuType!]!
}

type ProductTypeEdge {
  cursor: String
  node: ProductType
}

type ProductTypePageInfo {
  hasNextPage: Boolean
  endCursor: String
}

type ProductCursorPagination {
  edges: [ProductTypeEdge!]
  nodes: [ProductType!]
  totalCount: Int
  pageInfo: ProductTypePageInfo
}

type Query {
  helloWorld: String!
  brands(options: InputCursorPaginationOption!): BrandCursorPagination!
  brand(id: ID!): BrandType!
  products(options: InputCursorPaginationOption!): ProductCursorPagination!
  product(id: ID!): ProductType!
  categories(options: InputCursorPaginationOption!): CategoryCursorPagination!
  category(id: ID!): CategoryType!
  sub_categories(options: InputCursorPaginationOption!): SubCategoryCursorPagination!
  sub_category(id: ID!): SubCategoryType!
  variants(options: InputCursorPaginationOption!): VariantCursorPagination!
  variant(id: ID!): VariantType!
  variant_options(options: InputCursorPaginationOption!): VariantOptionCursorPagination!
  variant_option(id: ID!): VariantOptionType!
  product_options(options: InputCursorPaginationOption!): ProductOptionCursorPagination!
  product_option(id: ID!): ProductOptionType!
  skus(options: InputCursorPaginationOption!): SkuCursorPagination!
  sku(id: ID!): SkuType!
}

input InputCursorPaginationOption {
  first: Float!
  after: String!
  condition: JSON!
  groupBy: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createBrand(create_input: CreateBrandInput!): BrandType!
  updateBrand(update_input: UpdateBrandInput!, id: String!): BrandType!
  removeBrand(id: String!): BrandType!
  createProduct(create_input: CreateProductInput!): ProductType!
  updateProduct(update_input: UpdateProductInput!, id: String!): ProductType!
  removeProduct(id: String!): ProductType!
  createCategory(create_input: CreateCategoryInput!): CategoryType!
  updateCategory(update_input: UpdateCategoryInput!, id: String!): CategoryType!
  removeCategory(id: String!): CategoryType!
  createSubCategory(create_input: CreateSubCategoryInput!): SubCategoryType!
  updateSubCategory(update_input: UpdateSubCategoryInput!, id: String!): SubCategoryType!
  removeSubCategory(id: String!): SubCategoryType!
  createVariant(create_input: CreateVariantInputs!): VariantType!
  updateVariant(update_input: UpdateVariantInput!, id: String!): VariantType!
  removeVariant(id: String!): VariantType!
  createVariantOption(create_input: CreateVariantOptionInputs!): VariantOptionType!
  updateVariantOption(update_input: UpdateVariantOptionInput!, id: String!): VariantOptionType!
  removeVariantOption(id: String!): VariantOptionType!
  createProductOption(create_input: CreateProductOptionInput!): ProductOptionType!
  updateProductOption(update_input: UpdateProductOptionInput!, id: String!): ProductOptionType!
  removeProductOption(id: String!): ProductOptionType!
  createSku(create_input: CreateSkuInput!): SkuType!
  updateSku(update_input: UpdateSkuInput!, id: String!): SkuType!
  removeSku(id: String!): SkuType!
}

input CreateBrandInput {
  name: String
}

input UpdateBrandInput {
  name: String
  status: Boolean
}

input CreateProductInput {
  sub_category_id: String
  brand_id: String
  name: String
  slug: String
  description: String
  thumbnail: String
  create_variant_input: [CreateVariantInput!]
}

input CreateVariantInput {
  product_id: String
  name: String
  create_variant_option_input: [CreateVariantOptionInput!]
}

input CreateVariantOptionInput {
  variant_id: String
  name: String
}

input UpdateProductInput {
  sub_category_id: String
  brand_id: String
  name: String
  slug: String
  description: String
  thumbnail: String
  status: Boolean
}

input CreateCategoryInput {
  name: String
}

input UpdateCategoryInput {
  name: String
  status: Boolean
}

input CreateSubCategoryInput {
  category_id: String
  name: String
}

input UpdateSubCategoryInput {
  category_id: String
  name: String
  status: Boolean
}

input CreateVariantInputs {
  multiple: [CreateVariantInput!]
  single: CreateVariantInput
}

input UpdateVariantInput {
  product_id: String
  name: String
  status: Boolean
}

input CreateVariantOptionInputs {
  multiple: [CreateVariantOptionInput!]
  single: CreateVariantOptionInput
}

input UpdateVariantOptionInput {
  variant_id: String
  name: String
  status: Boolean
}

input CreateProductOptionInput {
  sku_id: String
  variant_option_id: String
}

input UpdateProductOptionInput {
  sku_id: String
  product_option_id: String
  status: Boolean
}

input CreateSkuInput {
  product_id: String
  sku: String
  name: String
  ranking: Float
  weight: Float
  discount: Float
  price: Float
  create_product_option_input: [CreateProductOptionInput!]
}

input UpdateSkuInput {
  product_id: String
  sku: String
  name: String
  ranking: Float
  weight: Float
  discount: Float
  price: Float
  status: Boolean
}
